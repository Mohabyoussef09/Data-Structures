Link for the problem: https://leetcode.com/problems/pascals-triangle/

**Problem**(List)
Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it.

Example:

Input: 5
Output:
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]

**Solution**
def generate(self, numRows):
        """
        :type numRows: int
        :rtype: List[List[int]]
        """
        l=[]
        if numRows==0:
            return []
        else:
            l=[]
            for i in range(numRows):
                l2=[]
                for j in range(i+1):
                    if j==0 or j==i:
                        l2.append(1)
                    else:
                        l2.append(l[i-1][j-1]+l[i-1][j])
                l.append(l2)
            return l

           