Link for the problem: https://leetcode.com/problems/3sum/

**Problem**(List)
Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:

The solution set must not contain duplicate triplets.

Example:

Given array nums = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]

**Solution**
def threeSum(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        l=[]
        for i in range(len(nums)):
            for j in range(len(nums)):
                for k in range(len(nums)):
                    if k==i or k==j or i==j:
                        continue
                    else:
                        if nums[i]+nums[j]+nums[k]==0:
                            smallList=[nums[i],nums[j],nums[k]]
                            smallList.sort()
                            l.append(smallList)
        
        l=set(tuple(row) for row in l)
        l=[list(item) for item in set(tuple(row) for row in l)]
                           
        return l
                